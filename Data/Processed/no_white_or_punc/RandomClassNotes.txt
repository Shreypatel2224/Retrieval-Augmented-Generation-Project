Redis example data source would be stored on aws S3 transformations would run on apache spark interface store on redis and training store on s3 Graph database degree is number of connections closeness is which node can most easily reach all other nodes in a graph or subgraph betweenness is which node has most control over flow between nodes and groups pagerank is which node is the most important and can be based on number and weighting of inlinks Pymongo Aggregation uses pipelines in pymongo A pipeline is a sequence of stages through which documents proceed and some of the different stages that can be used are match project sort limit unwind group and lookup Match c  mflixdbmoviesaggregate match year lte 1920  Match and project c  mflixdbmoviesaggregate match year lte 1920 project id0 title 1 cast 1  Match and project and limit and sort c  mflixdbmoviesaggregate match year lte 1920 sort title 1 limit 5 project id0 title 1 cast 1  Unwind c  mflixdbmoviesaggregate match year lte 1920 sort imdbrating 1 limit 5 unwind cast project id0 title 1 cast 1 rating imdbrating  Grouping  What is the average IMDB rating of all movies by year sort the data by year c  mflixdbmoviesaggregate group id release year year Avg Rating avg imdbrating sort  id 1   What is the average IMDB rating of all movies by year sort the data by avg rating in decreasing order c  mflixdbmoviesaggregate group id release year year Avg Rating avg imdbrating sort  Avg Rating 1 id 1  Lookup data  demodbcustomersaggregate  lookup  from orders localField custid foreignField custid as orders   project id 0 address 0  Reformatting queries match  match year lte 1920 limit  limit 5 project  project id0 title 1 cast 1 rating imdbrating agg  mflixdbmoviesaggregatematch limit project printdumpsagg indent2  The key id attribute is automatically returned unless you explicitly say to remove it  SELECT name rating FROM customers data  demodbcustomersfind name1 rating1 printdumpsdata indent2  Now without the id field  SELECT name rating FROM customers data  demodbcustomersfind name1 rating1 id0 printdumpsdata indent2  For every customer return all fields except id and address data  demodbcustomersfind id 0 address 0 printdumpsdata indent2  SELECT name rating FROM customers WHERE name LIKE T  Regular Expression Explanation    match beginning of line  T  match literal character T at the beginning of the line in this case    match any single character except newline    match zero or more occurrences of the previous character the  in this case data  demodbcustomersfindname regex T id 0 name 1 rating1 printdumpsdata indent2  SELECT name rating FROM customers ORDER BY rating LIMIT 2 data  demodbcustomersfind   id 0 name 1 rating1 sortratinglimit2 printdumpsdata indent2  Same as above but sorting in DESC order  SELECT name rating FROM customers ORDER BY rating DESC LIMIT 2 data  demodbcustomersfind   id 0 name 1 rating1 sortrating 1limit2 printdumpsdata indent2  Providing 2 sort keys data  demodbcustomersfind   id 0 name 1 rating1 sortrating 1 name 1limit2 printdumpsdata indent2