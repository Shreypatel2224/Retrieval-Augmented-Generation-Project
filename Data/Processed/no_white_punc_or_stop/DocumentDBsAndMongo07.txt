Document Database Document Database nonrelational database stores data structured documents usually JSON designed simple flexible scalable JSON JSON JavaScript Object Notation lightweight datainterchange format easy humans read write easy machines parse generate JSON built two structures collection namevalue pairs object record struct dictionary hash table keyed list associative array ordered list values array vector list sequence universal data structures supported virtually modern programming languages making JSON great data interchange format JSON Syntax Refer JSON syntax documentation httpswwwjsonorgjsonenhtml Binary JSON BSON BSON Binary JSON binaryencoded serialization JSONlike document structure Supports extended types part basic JSON eg Date BinaryData etc Lightweight Keeps space overhead minimum Traversable Designed easily traversed vitally important document DB Efficient Encoding decoding must efficient Supported many modern programming languages XML eXtensible Markup Language Precursor JSON data exchange format XML CSS → web pages separated content formatting Structurally similar HTML tag set extensible XMLRelated ToolsTechnologies XPath syntax retrieving specific elements XML document XQuery query language interrogating XML documents SQL XML DTD Document Type Definition language describing allowed structure XML document XSLT eXtensible Stylesheet Language Transformation tool transform XML formats including nonXML formats HTML Document Databases Document databases address impedance mismatch problem object persistence OO systems relational DBs structure data OO Programming → Inheritance Composition types Saving complex object relational database requires deconstructing structure document selfdescribing wellaligned apps use JSONXML transport layer MongoDB Started 2007 DoubleClick acquired Google 3 veterans realized limitations relational databases serving 400000 ads per second MongoDB short Humongous Database MongoDB Atlas released 2016 → document DB service MongoDB Structure Database Collection Document 1 Document 2 Document 3 Collection B Document 1 Document 2 Document 3 Collection C Document 1 Document 2 Document 3 MongoDB Documents predefined schema documents needed Every document collection could different dataschema Relational vs MongoDBDocument DB RDBMS Database → TableView → Row → Column → Index → Join → Foreign Key MongoDB Database → Collection → Document → Field → Index → Embedded Document → Reference MongoDB Features Rich Query Support Robust support CRUD operations Indexing Supports primary secondary indices document fields Replication Supports replica sets automatic failover Load balancing built MongoDB Versions MongoDB Atlas Fully managed MongoDB service cloud DBaaS MongoDB Enterprise Subscriptionbased selfmanaged version MongoDB MongoDB Community Sourceavailable freetouse selfmanaged Interacting MongoDB mongosh MongoDB Shell CLI tool interacting MongoDB instance MongoDB Compass Free opensource GUI work MongoDB database DataGrip 3rd Party Tools Every major language library interface MongoDB eg PyMongo Python Mongoose JavaScriptnode MongoDB Community Edition Docker Create container Map hostcontainer port 27017 Give initial username password superuser MongoDB Compass GUI Tool interacting MongoDB instance Download install MongoDB Compass Load MFlix Sample Data Set Compass create new Database named mflix Download mflix sample dataset unzip Import JSON files users theaters movies comments new collections mflix database Creating Database Collection Create new DB mflix Create new Collection users mongosh Mongo Shell find like SELECT collectionfind filters projections PyMongo PyMongo Python library interfacing MongoDB instances Connecting MongoDB python pymongo import MongoClient client MongoClientmongodbusernamepwlocalhost27017 Getting database collection pymongo import MongoClient client MongoClientmongodbusernamepwlocalhost27017 db clientds4300 collection dbmyCollection Inserting single document db clientds4300 collection dbmyCollection post author Mark text MongoDB Cool tags mongodb python postid collectioninsertonepostinsertedid printpostid Count Documents Collection demodbcollectioncountdocuments Finding documents collectionfind Finding documents filters collectionfindfield value Finding documents multiple conditions collectionfindfield1 value1 field2 value2 Finding documents conditions collectionfind field1 value1 field2 value2 Projecting specific fields collectionfind field1 1 field2 1 id 0 Updating document collectionupdateoneconditionfield conditionvalue set field value Deleting document collectiondeleteoneconditionfield conditionvalue Aggregation Pipeline pipeline match field value group id groupfield total sum 1 sort total 1 results collectionaggregatepipeline result results printresult