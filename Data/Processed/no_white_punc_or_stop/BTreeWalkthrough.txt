B Tree Walkthrough B Tree 4 Insert 42 21 63 89 Initially first node leaf node root node 21 42 … represent keys set KV pairs Leaf nodes store keys data although data shown Inserting another key cause node split B Tree 4 Insert 35 Leaf node needs split accommodate 35 New leaf node allocated right existing node 52 values stay original node remaining values moved new node smallest value new leaf node 42 copied parent needs created case internal node B Tree 4 Insert 10 27 96 insert process starts root node keys root node searched determine child node descend Example 10 Since 10 42 follow pointer left 42 Note None new values cause node split B Tree 4 Insert 30 Starting root descend leftmost child we’ll call curr curr leaf node Thus insert 30 curr curr full split Create new node right curr temporarily called newNode Insert newNode doubly linked list leaf nodes B Tree 4 Insert 30 continued Redistribute keys Copy smallest key 27 case newNode parent Rearrange keys pointers parent node parent newNode also root nothing else needs done B Tree 4 Fast forward state tree… Observation root node full next insertion splits leaf cause root split thus tree get 1 level deeper B Tree 4 Insert 37 Step 1 Insert 37 appropriate leaf node B Tree 4 Insert 37 Step 2 splitting internal node move middle element parent instead copying particular tree means create new internal node also root