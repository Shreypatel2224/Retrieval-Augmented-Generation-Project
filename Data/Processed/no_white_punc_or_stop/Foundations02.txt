Searching Databases Overview Searching common operation performed database system SQL SELECT statement arguably versatile complex baseline efficiency Linear Search Linear Search Process Start beginning list proceed element element find you’re looking reach last element without finding Time Complexity Best case O1 target found first element Worst case target array Key Concepts Records Collections Record collection values attributes single entity instance eg row table Collection set records entity type eg table Search Key value attribute entity type could one attributes Lists Records Contiguously Allocated List Array Description n x bytes allocated single “chunk” memory Pros Fast random access Cons Slow inserting anywhere end Linked List Description record requires x bytes additional space memory addresses Records linked together chain using memory addresses Pros Fast inserting anywhere list Cons Slow random access Binary Search Overview Input array values sorted order target value Output location index target indicator target found Algorithm def binarysearcharr target left right 0 lenarr 1 left right mid left right 2 arrmid target return mid elif arrmid target left mid 1 else right mid 1 return 1 Time Complexity Best case O1 target found midpoint Worst case Olog₂n target array Database Searching Challenges Data typically stored disk column ids value Searching specific id fast Searching specific specialVal requires linear scan column Problem Data cannot stored disk sorted id specialVal simultaneously without duplicating data space inefficient Solutions External Data Structures Use array tuples specialVal rowNumber sorted specialVal Enables binary search faster retrieval Slow inserts like inserting sorted array Use linked list tuples specialVal rowNumber sorted specialVal Fast inserts Slow searching requires linear scan Binary Search Trees BST Overview binary tree Every node left subtree less parent Every node right subtree greater parent Advantages Fast insert fast search operations Time Complexity Summary Linear Search Worst case Binary Search Worst case Olog₂n Binary Search Tree BST Search Olog₂n average worst case unbalanced tree Insert Olog₂n average worst case unbalanced tree Observations Arrays Fast random access Slow random insertions Linked Lists Slow random access Fast random insertions Binary Search Trees Balance key maintaining Olog₂n performance search insert operations