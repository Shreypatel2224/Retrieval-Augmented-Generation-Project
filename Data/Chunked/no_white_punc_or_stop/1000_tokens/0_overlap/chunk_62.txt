wellenough balanced purposes even perfect good balance condition two properties height binary search tree meeting condition Î˜log n takes Olog n time rebalance tree insertions removals words guarantees height tree still logarithmic give us logarithmictime lookups time spent balancing wont exceed logarithmic time would otherwise spend insertion removal tree logarithmic height cost wont outweigh benefit Coming balance condition like tall task stand shoulders giants came us definition helping guide us toward understanding whether weve found looking compromise AVL trees wellknown approaches maintaining binary search trees state nearbalance meets notion good balance condition One called AVL tree well explore Others outside scope course include redblack trees meet definition good splay trees dont always meet definition good meet amortized basis well stick one solution problem AVL trees AVL trees might called nearly balanced binary search trees certainly arent perfectlybalanced possible