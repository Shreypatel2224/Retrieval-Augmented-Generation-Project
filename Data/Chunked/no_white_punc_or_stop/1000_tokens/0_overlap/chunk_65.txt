important remember trees — — binary search trees rotation doesnt harm ordering keys nodes subtrees T1 T2 T3 maintain appropriate positions relative keys B keys T1 smaller keys T2 larger smaller B keys T3 larger B Performing rotation would simple matter adjusting pointers — notably constant number pointers matter many nodes tree means rotation would run Θ1 time Bs parent would point used point B right child would B instead root T2 Bs left child would root T2 instead second kind rotation RR rotation makes similar adjustment Note RR rotation mirror image rotation31425 439 PM ICS 46 Spring 2022 Notes Examples AVL Trees httpsicsucieduthorntonics46NotesAVLTrees 47A third kind rotation LR rotation makes adjustment thats slightly complicated LR rotation requires five pointer updates instead three still constant number changes runs Θ1 time Finally RL rotation mirror image LR rotation understand mechanics rotations work one step closer understanding AVL trees rotations arent arbitrary theyre