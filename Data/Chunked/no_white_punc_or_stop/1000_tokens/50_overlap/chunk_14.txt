nodes 50 children containing 50 records one million records 100 secondlevel nodes 100 full children tree height four must least 250000 records 100 million records Thus would require extremely large database generate tree height four tree split insert rules guarantee every node except perhaps root least half full average 34 full internal nodes purely overhead since keys stored used tree direct search rather store actual data overhead amount significant use space high fanout rate tree structure means vast majority nodes leaf nodes Kary tree approximately nodes internal nodes means half full binary treeâ€™s nodes internal nodes tree order 100 probably nodes internal nodes means overhead associated internal nodes low reduce number disk fetches required Btree even using following methods First upper levels tree stored main memory times tree branches quickly top two levels levels 0 1 require relatively little space Btree height four two disk fetches internal nodes level two leaves level three