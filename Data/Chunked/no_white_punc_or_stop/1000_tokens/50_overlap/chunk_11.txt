neither sibling lend record underfull node call must give records sibling removed tree certainly room sibling half full remember records contribute current node become less half full underflowing merge process combines two subtrees parent might cause underflow turn last two children root merge together tree loses level Javalike pseudocode tree delete algorithm Delete record given key value return true root underflows private boolean removehelpBPNodeKeyE rt Key k int currec binarylertkeys rtnumrecs k rtisLeaf BPLeafKeyErtkeyscurrec k return BPLeafKeyErtdeletecurrec else return false else Process internal node removehelpBPInternalKeyErtpointerscurrec k Child merge necessary return BPInternalKeyErtunderflowcurrec else return false tree requires nodes least half full except root Thus storage utilization must least 50 satisfactory many implementations note keeping nodes fuller result less space required less empty space disk file efficient processing fewer blocks average read memory amount