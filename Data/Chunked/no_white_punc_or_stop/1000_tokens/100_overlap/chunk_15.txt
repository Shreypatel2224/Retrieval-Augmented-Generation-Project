root least half full average 34 full internal nodes purely overhead since keys stored used tree direct search rather store actual data overhead amount significant use space high fanout rate tree structure means vast majority nodes leaf nodes Kary tree approximately nodes internal nodes means half full binary tree’s nodes internal nodes tree order 100 probably nodes internal nodes means overhead associated internal nodes low reduce number disk fetches required Btree even using following methods First upper levels tree stored main memory times tree branches quickly top two levels levels 0 1 require relatively little space Btree height four two disk fetches internal nodes level two leaves level three required reach pointer given record buffer pool could used manage nodes Btree Several nodes tree would typically main memory one time straightforward approach use standard method LRU node replacement However sometimes might desirable “lock” certain nodes root buffer pool general buffer pool