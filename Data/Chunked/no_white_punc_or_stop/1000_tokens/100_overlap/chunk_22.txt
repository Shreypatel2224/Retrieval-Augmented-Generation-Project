greater typically less data structure satisfies several invariants 1 Every path root leaf length 2 node n children contains n−1 keys 3 Every node except root least half full 4 elements stored given subtree keys keys parent node either side subtree pointer generalizes BST invariant 5 root least two children leaf example following order5 Btree m5 leaves enough space store 3 data records height tree uniformly every node least half full guaranteed asymptotic performance Olg n n size collection real win constant factors course choose pointers children plus m−1 elements fill cache line highest level memory hierarchy expect get cache hits example accessing large disk database cache lines memory blocks size read disk Lookup Btree straightforward Given node start use simple linear binary search find whether desired element node child31425 442 PM Btrees httpswwwcscornelleducoursescs31102012sprecitationsrec25Btreesrec25html 13pointer follow current node Insertion deletion Btree complicated fact