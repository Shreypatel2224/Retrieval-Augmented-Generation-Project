added node could quite simple insertion done recursively Compare heights left right subtrees node differ 1 choose rotation fix imbalance Note comparing heights left right subtrees would quite expensive didnt already know solution problem node store height ie height subtree rooted cheaply updated every insertion removal unwind recursion rotation chosen considering two links along path node imbalance heading back toward inserted node wondering names RR LR RL come answer mystery two links left perform rotation rooted imbalance two links right perform RR rotation rooted imbalance first link left second right perform LR rotation rooted imbalance first link right second left perform RL rotation rooted imbalance shown one rotations — RR LR RL — correct imbalance brought inserting key case wed perform LR rotation — first two links leading 40 toward 35 Left Right — rooted 40 would correct imbalance tree would rearranged look like Compare diagram describing LR rotation node containing 40 C node