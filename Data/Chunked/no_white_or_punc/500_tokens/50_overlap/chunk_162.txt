compromise as is often the case when we learn or design algorithms our willingness to tolerate an imperfect result thats still good enough for our uses will often lead to an algorithm that is much faster than one that achieves a perfect result So what would a good enough result be What is a good balance condition Our overall goal is for lookups insertions and removals from a binary search tree to require Olog n time in every case rather than letting them degrade to a worstcase behavior of On To