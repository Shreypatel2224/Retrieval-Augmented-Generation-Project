into a full internal node of a Btree of order four there will now be five children that must be dealt with The node is split into two nodes containing two keys each thus retaining the Btree property The middle of the five children is promoted to its parent 12611 B Trees The previous section mentioned that Btrees are universally used to implement largescale diskbased systems Actually the Btree as described in the previous section is almost never implemented What is most commonly implemented is a variant of the Btree called the tree When greater efficiency is required a more complicated variant known as the tree is used Consider again the linear index When the collection of records will not change a linear index provides an extremely efficient way to search The problem is how to handle those pesky inserts and deletes We could try to keep the core idea of storing a sorted array based list but make it more flexible by breaking the list into manageable chunks that are more easily updated