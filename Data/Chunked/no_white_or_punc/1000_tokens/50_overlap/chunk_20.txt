is very low We can reduce the number of disk fetches required for the Btree even more by using the following methods First the upper levels of the tree can be stored in main memory at all times Because the tree branches so quickly the top two levels levels 0 and 1 require relatively little space If the Btree is only height four then at most two disk fetches internal nodes at level two and leaves at level three are required to reach the pointer to any given record A buffer pool could be used to manage nodes of the Btree Several nodes of the tree would typically be in main memory at one time The most straightforward approach is to use a standard method such as LRU to do node replacement However sometimes it might be desirable to “lock” certain nodes such as the root into the buffer pool In general if the buffer pool is even of modest size say at least twice the depth of the tree no special techniques for node replacement will be required because the upperlevel nodes will naturally be