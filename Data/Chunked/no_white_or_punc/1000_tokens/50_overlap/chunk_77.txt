If we could keep the shape of our binary search trees complete we would always have binary search trees with height Θlog n The cost of maintaining completeness The trouble of course is that we need an algorithm for maintaining completeness And before we go to the trouble of trying to figure one out we should consider whether its even worth our time What can we deduce about the cost of maintaining completeness even if we havent figured out an algorithm yet One example demonstrates a very big problem Suppose we had the binary search tree on the left — which is complete by our definition — and we wanted to insert the key 1 into it If so we would need an algorithm that would transform the tree on the left into the tree on the right31425 439 PM ICS 46 Spring 2022 Notes and Examples AVL Trees httpsicsucieduthorntonics46NotesAVLTrees 27The tree on the right is certainly complete so this would be the outcome wed want But consider what it would take to do it Every key in the tree had to move