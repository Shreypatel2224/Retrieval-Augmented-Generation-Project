rotations — LL RR LR or RL — will correct any imbalance brought on by inserting a key In this case wed perform an LR rotation — the first two links leading from 40 down toward 35 are a Left and a Right — rooted at 40 which would correct the imbalance and the tree would be rearranged to look like this Compare this to the diagram describing an LR rotation The node containing 40 is C The node containing 30 is A The node containing 35 is B The empty left subtree of the node containing 30 is T1 The empty left subtree of the node containing 35 is T2 The empty right subtree of the node containing 35 is T3 The empty right subtree of the node containing 40 is T4 After the rotation we see what wed expect The node B which in our example contained 35 is now the root of the newlyrotated subtree The node A which in our example contained 30 is now the left child of the root of the newlyrotated subtree The node C which in our example contained 40 is now the right child of the root of the newlyrotated