because it is underflowing This merge process combines two subtrees of the parent which might cause it to underflow in turn If the last two children of the root merge together then the tree loses a level Here is a Javalike pseudocode for the tree delete algorithm  Delete a record with the given key value and return true if the root underflows  private boolean removehelpBPNodeKeyE rt Key k  int currec  binarylertkeys rtnumrecs k if rtisLeaf  if BPLeafKeyErtkeyscurrec  k  return BPLeafKeyErtdeletecurrec  else  return false   else  Process internal node if removehelpBPInternalKeyErtpointerscurrec k   Child will merge if necessary return BPInternalKeyErtunderflowcurrec  else  return false    The tree requires that all nodes be at least half full except for the root Thus the storage utilization must be at least 50 This is satisfactory for many implementations but note that keeping nodes fuller will result both in less space required because there is less empty space in the disk file and in