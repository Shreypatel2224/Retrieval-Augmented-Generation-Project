not provide access to the actual record Here is a pseudocode sketch of the tree search algorithm private E findhelpBPNodeKeyE rt Key k  int currec  binarylertkeys rtnumrecs k if rtisLeaf  if BPLeafKeyErtkeyscurrec  k     Example 23 Tree V isualization Delete 22 7146 65 51 2−3 B B B 1  10     Example B Tree V isualization Search in a tree of degree 4 10 S18 E40 Q55 F25 40 77 A89 B98 A127 V25 T39 F9877 B B31425 441 PM 126 BTrees — CS3 Data Structures  Algorithms httpsopendsaservercsvteduODSABooksCS3htmlBTreehtmlid2 49 return BPLeafKeyErtrecscurrec  else  return null   else return findhelpBPInternalKeyErtpointerscurrec k   tree insertion is similar to Btree insertion First the leaf that should contain the record is found If is not full then the new record is added and no other tree nodes are affected If is already full split it in two dividing the records evenly among the two nodes and promote a copy of the leastvalued key in the newly formed right node As with the 23 tree promotion