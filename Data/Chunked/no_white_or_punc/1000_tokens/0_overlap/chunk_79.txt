amortized basis but well stick with the one solution to the problem for now AVL trees AVL trees are what you might called nearly balanced binary search trees While they certainly arent as perfectlybalanced as possible they nonetheless achieve the goals weve decided on maintaining logarithmic height at no more than logarithmic cost So what makes a binary search tree nearly balanced enough to be considered an AVL tree The core concept is embodied by something called the AVL property We say that a node in a binary search tree has the AVL property if the heights of its left and right subtrees dif fer by no more than 1 In other words we tolerate a certain amount of imbalance — heights of subtrees can be slightly different but no more than that — in hopes that we can more efficiently maintain it Since were going to be comparing heights of subtrees theres one piece of background we need to consider Recall that the height of a tree is the length of its longest path By definition the height of