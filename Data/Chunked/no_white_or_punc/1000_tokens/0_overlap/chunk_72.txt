of this as taking a single step creating the node The second key you add will require you to look at the root node then take one step to the right You could think of this as taking two steps Each subsequent key you add will require one more step than the one before it The total number of steps it would take to add n keys would be determined by the sum 1  2  3    n This sum which well see several times throughout this course is equal to nn  1  2 So the total number of steps to build the entire tree would be Î˜n2 Overall when n gets large the tree would be hideously expensive to build and then every subsequent search would be painful as well So this in general is a situation we need to be sure to avoid or else we should probably consider a data structure other than a binary search tree the worst31425 439 PM ICS 46 Spring 2022 Notes and Examples AVL Trees httpsicsucieduthorntonics46NotesAVLTrees 17case is simply too much of a burden to bear if n might get large But if we can find a way to