Btrees keep related records that is records with similar key values on the same disk block which helps to minimize disk IO on range searches 4 Btrees guarantee that every node in the tree will be full at least to a certain minimum percentage This improves space efficiency while reducing the typical number of disk fetches necessary during a search or update operation A Btree of order is defined to have the following shape properties The root is either a leaf or has at least two children Each internal node except for the root has between and children All leaves are at the same level in the tree so the tree is always height balanced The Btree is a generalization of the 23 tree Put another way a 23 tree is a Btree of order three Normally the size of a node in the B tree is chosen to fill a disk block A Btree node implementation typically allows 100 or more children Thus a Btree node is equivalent to a disk block and a “pointer” value stored in the tree is actually the number of the block