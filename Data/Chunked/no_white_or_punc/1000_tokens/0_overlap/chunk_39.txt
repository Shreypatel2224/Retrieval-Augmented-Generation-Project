node Thus we insert 30 into curr  BUT curr is full So we have to split  Create a new node to the right of curr temporarily called newNode  Insert newNode into the doubly linked list of leaf nodes B Tree m  4  Insert 30 continued  Redistribute the keys  Copy the smallest key 27 in this case from newNode to the parent  Rearrange keys and pointers in the parent node  The parent of newNode is also the root So nothing else needs to be done B Tree m  4  Fast forward to this state of the treeâ€¦  Observation The root node is full  The next insertion that splits a leaf will cause the root to split and thus the tree will get 1 level deeper B Tree m  4  Insert 37 Step 1  Insert 37 into the appropriate leaf node B Tree m  4  Insert 37 Step 2  When splitting an internal node we move the middle element to the parent instead of copying it  In this particular tree that means we have to create a new internal node which is also now the root