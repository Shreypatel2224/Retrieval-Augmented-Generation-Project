too except that theyre more complicated to boot From a more analytical perspective there are three results that should give us pause Every time you perform a lookup in a degenerate binary search tree it will take On time because its possible that youll have to reach every node in the tree before youre done As n grows this is a heavy burden to bear If you implement your lookup recursively you might also be using On memory too as you might end up with as many as n frames on your runtime stack — one for every recursive call There are ways to mitigate this — for example some kinds of carefullywritten recursion in some programming languages including C can avoid runtime stack growth as you recurse — but its still a sign of potential trouble The time it will take you to build the degenerate tree will also be prohibitive If you start with an empty binary search tree and add keys to it in order how long does it take to do it The first key you add will go directly to the root You could think