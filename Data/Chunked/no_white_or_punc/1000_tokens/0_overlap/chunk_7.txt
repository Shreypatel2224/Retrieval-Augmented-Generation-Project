managing a sorted arraybased list where the list is broken into chunks The most significant difference between the tree and the BST or the standard Btree is that the tree stores records only at the leaf nodes Internal nodes store key values but these are used solely as placeholders to guide the search This means that internal nodes are significantly different in structure from leaf nodes Internal nodes store keys to guide the search associating each key with a pointer to a child tree node Leaf nodes store actual records or else keys and pointers to actual records in a separate disk file if the tree is being used purely as an index Depending on the size of a record as compared to the size of a key a leaf node in a tree of order might have enough room to store more or less than records The requirement is simply that the leaf nodes store enough records to remain at least half full The leaf nodes of a tree are normally linked together to form a doubly linked list Thus the entire