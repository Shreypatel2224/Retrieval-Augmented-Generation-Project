key value revised to reflect the true first key value in each node If neither sibling can lend a record to the underfull node call it  then must give its records to a sibling and be removed from the tree There is certainly room to do this because the sibling is at most half full remember that it had no records to contribute to the current node and has become less than half full because it is underflowing This merge process combines two subtrees of the parent which might cause it to underflow in turn If the last two children of the root merge together then the tree loses a level Here is a Javalike pseudocode for the tree delete algorithm  Delete a record with the given key value and return true if the root underflows  private boolean removehelpBPNodeKeyE rt Key k  int currec  binarylertkeys rtnumrecs k if rtisLeaf  if BPLeafKeyErtkeyscurrec  k  return BPLeafKeyErtdeletecurrec  else  return false   else  Process internal node if removehelpBPInternalKeyErtpointerscurrec k   Child will