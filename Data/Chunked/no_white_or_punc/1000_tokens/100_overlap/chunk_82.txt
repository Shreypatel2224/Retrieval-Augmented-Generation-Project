the left — which is complete by our definition — and we wanted to insert the key 1 into it If so we would need an algorithm that would transform the tree on the left into the tree on the right31425 439 PM ICS 46 Spring 2022 Notes and Examples AVL Trees httpsicsucieduthorntonics46NotesAVLTrees 27The tree on the right is certainly complete so this would be the outcome wed want But consider what it would take to do it Every key in the tree had to move So no matter what algorithm we used we would still have to move every key If there are n keys in the tree that would take Ωn time — moving n keys takes at least linear time even if you have the best possible algorithm for moving them the work still has to get done So in the worst case maintaining completeness after a single insertion requires Ωn time Unfortunately this is more time than we ought to be spending on maintaining balance This means well need to come up with a compromise as is often the case when we learn or design algorithms our