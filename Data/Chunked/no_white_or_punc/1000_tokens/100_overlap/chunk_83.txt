well need to come up with a compromise as is often the case when we learn or design algorithms our willingness to tolerate an imperfect result thats still good enough for our uses will often lead to an algorithm that is much faster than one that achieves a perfect result So what would a good enough result be What is a good balance condition Our overall goal is for lookups insertions and removals from a binary search tree to require Olog n time in every case rather than letting them degrade to a worstcase behavior of On To do that we need to decide on a balance condition which is to say that we need to understand what shape is considered wellenough balanced for our purposes even if not perfect A good balance condition has two properties The height of a binary search tree meeting the condition is Î˜log n It takes Olog n time to rebalance the tree on insertions and removals In other words it guarantees that the height of the tree is still logarithmic which will give us logarithmictime