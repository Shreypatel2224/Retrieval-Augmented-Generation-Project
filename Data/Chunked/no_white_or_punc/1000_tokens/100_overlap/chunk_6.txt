provides an extremely efficient way to search The problem is how to handle those pesky inserts and deletes We could try to keep the core idea of storing a sorted array based list but make it more flexible by breaking the list into manageable chunks that are more easily updated How might we do that First we need to decide how big the chunks should be Since the data are on disk it seems reasonable to store a chunk that is the size of a disk block or a small multiple of the disk block size If the next record to be inserted belongs to a chunk that hasnâ€™t filled its block then we can just insert it there The fact that this might cause other records in that chunk to move a little bit in the array is not important since this does not cause any extra disk accesses so long as we move data within that chunk But what if the chunk fills up the entire block that contains it We could just split it in half What if we want to delete a record We could just take the deleted record out of the chunk but