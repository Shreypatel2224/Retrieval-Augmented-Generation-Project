half What if we want to delete a record We could just take the deleted record out of the chunk but we might not want a lot of nearempty chunks So we could put adjacent chunks together if they have only a small amount of data between them Or we could shuffle data between adjacent chunks that together contain more data The big problem would be how to find the desired chunk when processing a record with a given key Perhaps some sort of treelike structure could be used to locate the appropriate chunk These ideas are exactly what motivate the tree The tree is essentially a mechanism for managing a sorted arraybased list where the list is broken into chunks The most significant difference between the tree and the BST or the standard Btree is that the tree stores records only at the leaf nodes Internal nodes store key values but these are used solely as placeholders to guide the search This means that internal nodes are significantly different in structure from leaf nodes Internal nodes